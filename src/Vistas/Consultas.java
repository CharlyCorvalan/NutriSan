/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vistas;

import AccesoADatos.DietaData;
import AccesoADatos.PacienteData;
import AccesoADatos.VisitaData;
import Entidades.Dieta;
import Entidades.Paciente;
import Entidades.Visita;
import java.awt.Dimension;
import java.sql.PreparedStatement;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author charl
 */
public class Consultas extends javax.swing.JInternalFrame {

    private JComponent Barra = ((javax.swing.plaf.basic.BasicInternalFrameUI) getUI()).getNorthPane();
    private Dimension DimensionBarra = null;
    private DefaultTableModel modelo = new DefaultTableModel() {
        public boolean isCellEditable(int fila, int columna) {
            return false;
        }
    };

    public Consultas() {
        initComponents();
        ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        armarCabecera();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BotonNueva = new javax.swing.JLabel();
        BotonConsultas = new javax.swing.JLabel();
        LabelDni = new javax.swing.JLabel();
        TextoDni = new javax.swing.JTextField();
        BotonBuscar = new javax.swing.JLabel();
        LabelDieta = new javax.swing.JLabel();
        LabelPesoInicial = new javax.swing.JLabel();
        TextoPesoInicial = new javax.swing.JTextField();
        LabelPesoBuscado = new javax.swing.JLabel();
        TextoPesoBuscado = new javax.swing.JTextField();
        LabelFechaLimite = new javax.swing.JLabel();
        TextoFechaFinal = new javax.swing.JTextField();
        LabelFechaVisita = new javax.swing.JLabel();
        TextoPesoVisita = new javax.swing.JTextField();
        LabelPesoVisita = new javax.swing.JLabel();
        CalendarioVisita = new com.toedter.calendar.JDateChooser();
        Tabla = new javax.swing.JScrollPane();
        TablaConsultas = new javax.swing.JTable();
        ObjetivoConseguido = new javax.swing.JLabel();
        ObjetivoNo = new javax.swing.JLabel();
        PanelRegistrar = new javax.swing.JPanel();
        BotonRegistrar = new javax.swing.JLabel();
        PanelCancelar = new javax.swing.JPanel();
        BotonCancelar = new javax.swing.JLabel();
        ComboBox = new javax.swing.JComboBox<>();
        Fondo = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setPreferredSize(new java.awt.Dimension(750, 565));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BotonNueva.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        BotonNueva.setText("Nueva Visita");
        BotonNueva.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonNueva.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonNuevaMouseClicked(evt);
            }
        });
        getContentPane().add(BotonNueva, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        BotonConsultas.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        BotonConsultas.setText("Consultas");
        BotonConsultas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonConsultas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonConsultasMouseClicked(evt);
            }
        });
        getContentPane().add(BotonConsultas, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 30, -1, -1));

        LabelDni.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        LabelDni.setText("DNI");
        getContentPane().add(LabelDni, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 40, -1));
        getContentPane().add(TextoDni, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 70, 120, -1));

        BotonBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscar2.png"))); // NOI18N
        BotonBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonBuscarMouseClicked(evt);
            }
        });
        getContentPane().add(BotonBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 60, -1, -1));

        LabelDieta.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        LabelDieta.setText("Dieta");
        getContentPane().add(LabelDieta, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, -1, -1));

        LabelPesoInicial.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        LabelPesoInicial.setText("Peso Inicial");
        getContentPane().add(LabelPesoInicial, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, -1, -1));

        TextoPesoInicial.setPreferredSize(new java.awt.Dimension(100, 25));
        getContentPane().add(TextoPesoInicial, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, -1, -1));

        LabelPesoBuscado.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        LabelPesoBuscado.setText("Peso Buscado");
        getContentPane().add(LabelPesoBuscado, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 110, -1, -1));

        TextoPesoBuscado.setMinimumSize(new java.awt.Dimension(100, 25));
        TextoPesoBuscado.setPreferredSize(new java.awt.Dimension(100, 25));
        getContentPane().add(TextoPesoBuscado, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 130, -1, -1));

        LabelFechaLimite.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        LabelFechaLimite.setText("Fecha Limite");
        getContentPane().add(LabelFechaLimite, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 110, -1, -1));

        TextoFechaFinal.setPreferredSize(new java.awt.Dimension(100, 25));
        getContentPane().add(TextoFechaFinal, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 130, -1, -1));

        LabelFechaVisita.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        LabelFechaVisita.setText("Fecha Visita");
        getContentPane().add(LabelFechaVisita, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, -1, -1));

        TextoPesoVisita.setPreferredSize(new java.awt.Dimension(75, 25));
        getContentPane().add(TextoPesoVisita, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 200, -1, -1));

        LabelPesoVisita.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        LabelPesoVisita.setText("Peso Visita");
        getContentPane().add(LabelPesoVisita, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 170, -1, -1));

        CalendarioVisita.setPreferredSize(new java.awt.Dimension(150, 25));
        getContentPane().add(CalendarioVisita, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, -1, -1));

        TablaConsultas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Tabla.setViewportView(TablaConsultas);

        getContentPane().add(Tabla, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 250, 530, 170));

        ObjetivoConseguido.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        ObjetivoConseguido.setForeground(new java.awt.Color(51, 204, 0));
        ObjetivoConseguido.setText("Objetivo conseguido");
        ObjetivoConseguido.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ObjetivoConseguido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ObjetivoConseguidoMouseClicked(evt);
            }
        });
        getContentPane().add(ObjetivoConseguido, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, -1, -1));

        ObjetivoNo.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        ObjetivoNo.setForeground(new java.awt.Color(255, 0, 0));
        ObjetivoNo.setText("Objetivo no conseguido");
        ObjetivoNo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ObjetivoNo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ObjetivoNoMouseClicked(evt);
            }
        });
        getContentPane().add(ObjetivoNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 50, -1, -1));

        PanelRegistrar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        PanelRegistrar.setPreferredSize(new java.awt.Dimension(100, 30));
        PanelRegistrar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BotonRegistrar.setFont(new java.awt.Font("Roboto Black", 0, 14)); // NOI18N
        BotonRegistrar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BotonRegistrar.setText("REGISTRAR");
        BotonRegistrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonRegistrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonRegistrarMouseClicked(evt);
            }
        });
        PanelRegistrar.add(BotonRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 100, 30));

        getContentPane().add(PanelRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 190, -1, -1));

        PanelCancelar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        PanelCancelar.setPreferredSize(new java.awt.Dimension(100, 30));
        PanelCancelar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BotonCancelar.setFont(new java.awt.Font("Roboto Black", 0, 14)); // NOI18N
        BotonCancelar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BotonCancelar.setText("CANCELAR");
        BotonCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonCancelarMouseClicked(evt);
            }
        });
        PanelCancelar.add(BotonCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 100, 30));

        getContentPane().add(PanelCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 190, -1, -1));

        ComboBox.setPreferredSize(new java.awt.Dimension(120, 25));
        ComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(ComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, -1));

        Fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/FondoConsultas1.png"))); // NOI18N
        getContentPane().add(Fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 540));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotonConsultasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonConsultasMouseClicked
        limpiarPantalla();
        ObjetivoConseguido.setVisible(true);
        ObjetivoNo.setVisible(true);
    }//GEN-LAST:event_BotonConsultasMouseClicked

    private void ObjetivoConseguidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ObjetivoConseguidoMouseClicked
        Tabla.setVisible(true);
        limpiarTabla();
        cargarTabla(1);
    }//GEN-LAST:event_ObjetivoConseguidoMouseClicked

    private void BotonNuevaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonNuevaMouseClicked
        limpiarPantalla();
        LabelDni.setVisible(true);
        TextoDni.setVisible(true);
        BotonBuscar.setVisible(true);
    }//GEN-LAST:event_BotonNuevaMouseClicked

    private void BotonBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonBuscarMouseClicked
        limpiarCombo();
        String tdni = TextoDni.getText();
        if (tdni.isEmpty() == true) {
            JOptionPane.showMessageDialog(null, "Ingrese un dni y luego en buscar");
        } else {
            try {
                int dni = Integer.parseInt(tdni);
                PacienteData paciData = new PacienteData();
                Paciente paciente = new Paciente();
                paciente = paciData.buscarXdni(dni);
                if (paciente == null) {
                    JOptionPane.showMessageDialog(null, "Paciente no encontrado");
                } else {
                    DietaData dietaBuscar = new DietaData();
                    ArrayList<Dieta> dieta = new ArrayList<>();
                    dieta = dietaBuscar.listarDietas(paciente);
                    cargarCombo(dieta);

                    LabelDieta.setVisible(true);
                    LabelPesoInicial.setVisible(true);
                    LabelPesoBuscado.setVisible(true);
                    LabelFechaLimite.setVisible(true);
                    ComboBox.setVisible(true);
                    TextoPesoInicial.setVisible(true);
                    TextoPesoBuscado.setVisible(true);
                    TextoFechaFinal.setVisible(true);
                }
            } catch (NumberFormatException x) {
                JOptionPane.showMessageDialog(null, "Debe ingresar solo numeros en el campo DNI");
            }
        }
    }//GEN-LAST:event_BotonBuscarMouseClicked

    private void ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxActionPerformed
        TextoPesoInicial.setText("");
        TextoPesoBuscado.setText("");
        TextoFechaFinal.setText("");
        if (ComboBox.getSelectedIndex() > 0) {
            try {                
                String idS = ComboBox.getSelectedItem().toString();
                int largo = idS.length();
                String subCadena = "";
                for (int i = 0; i < largo - 1; i++) {
                    if (idS.substring(i, i + 1).equals("-")) {
                        i = largo;
                    } else {
                        subCadena = subCadena + idS.substring(i, i + 1);
                    }
                }
                int idDieta = Integer.parseInt(subCadena);
                int dniPaciente = Integer.parseInt(TextoDni.getText());
                PacienteData paciData = new PacienteData();
                Paciente paciente = new Paciente();
                paciente = paciData.buscarXdni(dniPaciente);
                int idPaciente = 0;
                idPaciente = paciente.getIdPaciente();
                Dieta dieta = new Dieta();
                DietaData dieData = new DietaData();
                dieta = dieData.buscarDieta(idDieta, idPaciente);
                TextoPesoInicial.setText(String.valueOf(dieta.getPesoInicial()));
                TextoPesoBuscado.setText(String.valueOf(dieta.getPesoFinal()));
                LocalDate dato=dieta.getFechaFinal();
                String datoS=dato.format(DateTimeFormatter.ofPattern("dd-MM-yyyy"));          
                TextoFechaFinal.setText(datoS);
                LabelFechaVisita.setVisible(true);
                CalendarioVisita.setVisible(true);
                LabelPesoVisita.setVisible(true);
                TextoPesoVisita.setVisible(true);
                PanelRegistrar.setVisible(true);
                PanelCancelar.setVisible(true);
                
            } catch (NumberFormatException ex) {

            }
      
        }
    }//GEN-LAST:event_ComboBoxActionPerformed

    private void BotonRegistrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonRegistrarMouseClicked
        String pesoInicial = TextoPesoInicial.getText();
        String pesoFinal = TextoPesoBuscado.getText();
        String pesoVisita = TextoPesoVisita.getText();
        if (pesoInicial.isEmpty() == true || pesoFinal.isEmpty() == true || pesoVisita.isEmpty() == true) {
            JOptionPane.showMessageDialog(null, "Faltan datos para continuar");
        } else {
            try {
                double pesoIni = Double.parseDouble(TextoPesoInicial.getText());
                double pesoFin = Double.parseDouble(TextoPesoBuscado.getText());
                double pesoVis = Double.parseDouble(TextoPesoVisita.getText());
                VisitaData visiData = new VisitaData();
                String idS = ComboBox.getSelectedItem().toString();
                int largo = idS.length();
                String subCadena = "";
                for (int i = 0; i < largo - 1; i++) {
                    if (idS.substring(i, i + 1).equals("-")) {
                        i = largo;
                    } else {
                        subCadena = subCadena + idS.substring(i, i + 1);
                    }
                }
                int idDieta = Integer.parseInt(subCadena);
                int dniPaciente = Integer.parseInt(TextoDni.getText());
                PacienteData paciData = new PacienteData();
                Paciente paciente = new Paciente();
                paciente = paciData.buscarXdni(dniPaciente);
                int idPaciente = 0;
                idPaciente = paciente.getIdPaciente();
                Dieta dieta=new Dieta();
                dieta.setIdDieta(idDieta);
                DietaData dietaData=new DietaData();
                dieta=dietaData.buscarDieta(idDieta, idPaciente);               
                LocalDate fechaVisita,fechaFinal;
                fechaFinal=dieta.getFechaFinal();
                fechaVisita = CalendarioVisita.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                if(fechaVisita.isAfter(fechaFinal)){                   
                    if (pesoIni < pesoFin) {

                    if (pesoVis >= pesoFin) {

                        Visita visita = new Visita(idPaciente, idDieta, pesoVis, fechaVisita, true);
                        visiData.nuevaVisita(visita);
                    } else {
                        Visita visita = new Visita(idPaciente, idDieta, pesoVis, fechaVisita, false);
                        visiData.nuevaVisita(visita);
                    }
                } else if (pesoIni > pesoFin) {
                    if (pesoVis <= pesoFin) {
                        Visita visita = new Visita(idPaciente, idDieta, pesoVis, fechaVisita, true);
                        visiData.nuevaVisita(visita);
                    } else {
                        Visita visita = new Visita(idPaciente, idDieta, pesoVis, fechaVisita, false);
                        visiData.nuevaVisita(visita);
                    }
                }
                }else{
                    JOptionPane.showMessageDialog(null, "Fecha de visita anterior a Fecha limite, no se registrara la visita");
                }
                
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Peso visita solo acepta numeros");
                TextoPesoVisita.setText("");
            }
        }
    }//GEN-LAST:event_BotonRegistrarMouseClicked

    private void BotonCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonCancelarMouseClicked
        limpiarPantalla();
    }//GEN-LAST:event_BotonCancelarMouseClicked

    private void ObjetivoNoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ObjetivoNoMouseClicked
        Tabla.setVisible(true);
        limpiarTabla();
        cargarTabla(2);
    }//GEN-LAST:event_ObjetivoNoMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BotonBuscar;
    private javax.swing.JLabel BotonCancelar;
    private javax.swing.JLabel BotonConsultas;
    private javax.swing.JLabel BotonNueva;
    private javax.swing.JLabel BotonRegistrar;
    private com.toedter.calendar.JDateChooser CalendarioVisita;
    private javax.swing.JComboBox<String> ComboBox;
    private javax.swing.JLabel Fondo;
    private javax.swing.JLabel LabelDieta;
    private javax.swing.JLabel LabelDni;
    private javax.swing.JLabel LabelFechaLimite;
    private javax.swing.JLabel LabelFechaVisita;
    private javax.swing.JLabel LabelPesoBuscado;
    private javax.swing.JLabel LabelPesoInicial;
    private javax.swing.JLabel LabelPesoVisita;
    private javax.swing.JLabel ObjetivoConseguido;
    private javax.swing.JLabel ObjetivoNo;
    private javax.swing.JPanel PanelCancelar;
    private javax.swing.JPanel PanelRegistrar;
    private javax.swing.JScrollPane Tabla;
    private javax.swing.JTable TablaConsultas;
    private javax.swing.JTextField TextoDni;
    private javax.swing.JTextField TextoFechaFinal;
    private javax.swing.JTextField TextoPesoBuscado;
    private javax.swing.JTextField TextoPesoInicial;
    private javax.swing.JTextField TextoPesoVisita;
    // End of variables declaration//GEN-END:variables
public void limpiarPantalla() {
        LabelDni.setVisible(false);
        TextoDni.setVisible(false);
        LabelDieta.setVisible(false);
        LabelPesoInicial.setVisible(false);
        LabelPesoBuscado.setVisible(false);
        LabelFechaLimite.setVisible(false);
        ComboBox.setVisible(false);
        TextoPesoInicial.setVisible(false);
        TextoPesoBuscado.setVisible(false);
        TextoFechaFinal.setVisible(false);
        LabelFechaVisita.setVisible(false);
        LabelPesoVisita.setVisible(false);
        CalendarioVisita.setVisible(false);
        TextoPesoVisita.setVisible(false);
        ObjetivoConseguido.setVisible(false);
        ObjetivoNo.setVisible(false);
        BotonBuscar.setVisible(false);
        Tabla.setVisible(false);
        PanelRegistrar.setVisible(false);
        PanelCancelar.setVisible(false);
        limpiarCombo();
        limpiarTabla();
        TextoDni.setText("");
        TextoPesoInicial.setText("");
        TextoPesoBuscado.setText("");
        TextoFechaFinal.setText("");
        TextoPesoVisita.setText("");
        CalendarioVisita.setDate(null);
    }

    private void armarCabecera() {
        modelo.addColumn("Paciente");
        modelo.addColumn("Peso Objetivo");
        modelo.addColumn("Fecha Objetivo");
        modelo.addColumn("Peso Visita");
        modelo.addColumn("Fecha Visita");
        modelo.addColumn("Objetivo");
        TablaConsultas.setModel(modelo);
    }

    private void cargarTabla(int x) {
        if (x == 1) {
            VisitaData visData = new VisitaData();
            ArrayList<Visita> visita = new ArrayList<>();
            visita = visData.objetivoCumplido();
            for (Visita pa : visita) {
                Paciente paciente = new Paciente();
                PacienteData paci = new PacienteData();
                Dieta dieta = new Dieta();
                DietaData dietaBuscar = new DietaData();
                paciente = paci.buscarXID(pa.getPaciente());
                paciente.setIdPaciente(pa.getPaciente());
                dieta.setIdDieta(pa.getDieta());
                dieta = dietaBuscar.buscarDieta(dieta.getIdDieta(), paciente.getIdPaciente()); 
                
                modelo.addRow(new Object[]{paciente.getNombre(), dieta.getPesoFinal(), dieta.getFechaFinal(), pa.getPesoVisita(), pa.getFechaVisita(), pa.isObjetivo()});
            }
        } else if (x == 2) {
            VisitaData visData = new VisitaData();
            ArrayList<Visita> visita = new ArrayList<>();
            visita = visData.noCumplido();
            for (Visita pa : visita) {
                Paciente paciente = new Paciente();
                PacienteData paci = new PacienteData();
                Dieta dieta = new Dieta();
                DietaData dietaBuscar = new DietaData();
                paciente = paci.buscarXID(pa.getPaciente());
                dieta.setIdDieta(pa.getDieta());
                paciente.setIdPaciente(pa.getPaciente());
                dieta = dietaBuscar.buscarDieta(dieta.getIdDieta(), paciente.getIdPaciente());
                modelo.addRow(new Object[]{paciente.getNombre(), dieta.getPesoFinal(), dieta.getFechaFinal(), pa.getPesoVisita(), pa.getFechaVisita(), pa.isObjetivo()});
            }
        }
    }

    private void cargarCombo(ArrayList<Dieta> x) {
        ComboBox.addItem("Lista de dietas");
        ArrayList<Dieta> dieta = new ArrayList<>();
        dieta = x;
        for (Dieta dieta1 : dieta) {
            ComboBox.addItem(dieta1.getIdDieta() + "-" + dieta1.getNombre());
        }
        System.out.println("");
    }
    private void limpiarTabla(){
        int filas = modelo.getRowCount();
        for (int i = filas-1; i > -1; i--) {
            modelo.removeRow(i);
        }
    }
    private void limpiarCombo(){
        int filas=ComboBox.getItemCount();
        for (int i = filas-1; i > -1; i--) {
            ComboBox.removeItemAt(i);
        }
    }

}
